#!/bin/bash
#
#   Scrum!
#
#   Provide a command to keep track of daily status reports, intended
#   for use with irssi_script scrum.pl @
#   https://github.com/coyote240/irssi_scripts/blob/master/scrum.pl
#
#   scrum stores daily status, one file per day, in the directory named
#   in the SCRUM_DIR environment variable.  Status files are named for the
#   day they are to be reported, in the format YYYY-MM-DD.txt.
#
#   When scrum is run, it will look for an existing status file for today,
#   or if one is not found will look up to 14 days into the past for a previous
#   file.  If a file is found for today, scrum will open that file in EDITOR.
#   If a file for a previous day is found, it will copy the contents of that
#   status file into the file for today and open that file in EDITOR.
#
#   Options:
#
#   -p | --print    Print the contents of the current scrum file if present.

if [ -z "$SCRUM_DIR" ]
then
    echo 'SCRUM_DIR environment variable must be set'
    exit
fi

if [ -z "$EDITOR" ]
then
    echo 'EDITOR environment variable must be set'
    exit
fi

function todays_file {
    local TODAY=$(date +"%Y-%m-%d")
    echo "${SCRUM_DIR%%/}/$TODAY.txt"
}

function carry_over_history {
    local DELTA=1
    local TODAYS_FILE=$1

    while [ $DELTA -lt 14 ]; do
        local LAST_SCRUM=$(date -v-${DELTA}d +"%Y-%m-%d")
        local LAST_SCRUM_FILE="${SCRUM_DIR%%/}/$LAST_SCRUM.txt"

        if [ -e $LAST_SCRUM_FILE ]
        then
            echo "File $LAST_SCRUM_FILE found, copying over contents..."
            cp $LAST_SCRUM_FILE $TODAYS_FILE
            break
        fi

        let DELTA=DELTA+1
    done
}

function edit_status {
    local TODAYS_FILE=$(todays_file)

    if [ -e $TODAYS_FILE ]
    then
        echo "Scrum file found for today, ${TODAY}"
    else
        echo "Creating new file for today at ${TODAYS_FILE}"
        carry_over_history $TODAYS_FILE
    fi

    $EDITOR $TODAYS_FILE
}

function print_current_status {
    local TODAYS_FILE=$(todays_file)

    if [ ! -e $TODAYS_FILE ]
    then
        echo "No scrum file for today"
        exit
    fi

    IFS=$'\n'
    while read -r line
    do
        echo '#info' $line
    done < "$TODAYS_FILE"

    if [ ! -z "$line" ]
    then
        echo -n "$line"
    fi

    echo 'EOS'
}

while [ $# -gt 0 ]
do
    case "$1" in
        -p|--print)
            print_current_status
            exit;;
    esac
done

edit_status
exit
